[
    {
        "label": "django.shortcuts",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Routine",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Session_year",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Staff",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Staff_Feedback",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Staff_leave",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Staff_Notification",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Staff",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Staff_Feedback",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Staff_leave",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Staff_Notification",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "importPath": "app.models",
        "description": "app.models",
        "isExtraImport": true,
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "Department",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Semester",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Subject",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Department",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Semester",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Subject",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Department",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Semester",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Subject",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Department",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Program",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Department",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Program",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Semester",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Department",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Program",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Semester",
        "importPath": "course.models",
        "description": "course.models",
        "isExtraImport": true,
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "RoutineForm",
        "importPath": "app.forms",
        "description": "app.forms",
        "isExtraImport": true,
        "detail": "app.forms",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Case",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "When",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "IntegerField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Value",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "SAVE_NOTIFICATION",
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "isExtraImport": true,
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "check_conflicts",
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "isExtraImport": true,
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "RoutineCreateView",
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "isExtraImport": true,
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "RoutineUpdateView",
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "isExtraImport": true,
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "teacher_weekly_routine_view",
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "isExtraImport": true,
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "STAFF_FEEDBACK",
        "importPath": "Student_Management_systems.Staff_Views",
        "description": "Student_Management_systems.Staff_Views",
        "isExtraImport": true,
        "detail": "Student_Management_systems.Staff_Views",
        "documentation": {}
    },
    {
        "label": "EmailBackEand",
        "importPath": "app.EmailBackEand",
        "description": "app.EmailBackEand",
        "isExtraImport": true,
        "detail": "app.EmailBackEand",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "ModelBackend",
        "importPath": "django.contrib.auth.backends",
        "description": "django.contrib.auth.backends",
        "isExtraImport": true,
        "detail": "django.contrib.auth.backends",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "time",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "Coalesce",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "RoutineCreateView",
        "kind": 6,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "class RoutineCreateView(CreateView):\n    model = Routine\n    form_class = RoutineForm\n    template_name = 'routine/create_routine.html'\n    success_url = reverse_lazy('view_staff')\n    def form_valid(self, form):\n        teacher = form.cleaned_data.get('teacher')\n        subject = form.cleaned_data.get('subject')\n        day = form.cleaned_data.get('day')\n        start_time = form.cleaned_data.get('start_time')",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "RoutineUpdateView",
        "kind": 6,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "class RoutineUpdateView(UpdateView):\n    model = Routine\n    form_class = RoutineForm\n    template_name = 'routine/create_routine.html'  # Reuse the same template as the create view\n    success_url = reverse_lazy('view_staff')\n    def form_valid(self, form):\n        teacher = form.cleaned_data.get('teacher')\n        subject = form.cleaned_data.get('subject')\n        day = form.cleaned_data.get('day')\n        start_time = form.cleaned_data.get('start_time')",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "HOME",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def HOME(request):\n    student_count = Student.objects.all().count()\n    staff_count = Staff.objects.all().count()\n    # course_count = Course.objects.all().count()\n    # subject_count= Subject.objects.all().count()\n    student_gender_male = Student.objects.filter(gender = 'Male' ).count()\n    student_gender_female = Student.objects.filter(gender = 'Female' ).count()\n    context = {\n        'student_count': student_count,\n        'staff_count' : staff_count,",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "ADD_STUDENT",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def ADD_STUDENT(request):\n    semesters = Semester.objects.all()\n    if request.method == \"POST\":\n        profile_pic = request.FILES.get('profile_pic')\n        first_name = request.POST.get('first_name')\n        last_name = request.POST.get('last_name')\n        email = request.POST.get('email')\n        username = request.POST.get('username')\n        password = request.POST.get('password')\n        address = request.POST.get('address')",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "VIEW_STUDENT",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def VIEW_STUDENT(request):\n    student = Student.objects.all()\n    context = {\n        'student':student,\n    }\n    return render(request,'Hod/view_student.html',context)\n@login_required(login_url='/')\ndef EDIT_STUDENT(request,id):\n    student = Student.objects.filter(id = id)\n    course = Semester.objects.all()",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "EDIT_STUDENT",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def EDIT_STUDENT(request,id):\n    student = Student.objects.filter(id = id)\n    course = Semester.objects.all()\n    session_year = Session_year.objects.all()\n    context = {\n        'student':student,\n        'course':course,\n        'session_year':session_year,\n    }\n    return render(request,'Hod/edit_student.html',context)",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "UPDATE_STUDENT",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def UPDATE_STUDENT(request):\n    if request.method == 'POST':\n        student_id = request.POST.get('student_id')\n        profile_pic = request.FILES.get('profile_pic')\n        profile_pic = request.FILES.get('profile_pic')\n        first_name = request.POST.get('first_name')\n        last_name = request.POST.get('last_name')\n        email = request.POST.get('email')\n        username = request.POST.get('username')\n        password = request.POST.get('password')",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "DELETE_STUDENT",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def DELETE_STUDENT(request,admin):\n    student = CustomUser.objects.get(id = admin)\n    student.delete()\n    messages.success(request,'Record Are Succesfully Deleted')\n    return redirect('view_student')\n@login_required(login_url='/')\ndef ADD_STAFF(request):\n    departments = Department.objects.all()  # Fetch all departments",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "ADD_STAFF",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def ADD_STAFF(request):\n    departments = Department.objects.all()  # Fetch all departments\n    rank_choices = Staff.RANK_CHOICES\n    if request.method == \"POST\":\n        profile_pic = request.FILES.get('profile_pic')\n        first_name = request.POST.get('first_name')\n        last_name = request.POST.get('last_name')\n        email = request.POST.get('email')\n        username = request.POST.get('username')\n        password = request.POST.get('password')",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "VIEW_STAFF",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def VIEW_STAFF(request):\n    staff = Staff.objects.all()\n    context = {\n        'staff': staff,\n    }\n    return render(request, 'Hod/view_staff.html', context)\n@login_required(login_url='/')\ndef EDIT_STAFF(request, id):\n    staff = get_object_or_404(Staff, id=id)\n    departments = Department.objects.all()  # Fetch all departments",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "EDIT_STAFF",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def EDIT_STAFF(request, id):\n    staff = get_object_or_404(Staff, id=id)\n    departments = Department.objects.all()  # Fetch all departments\n    rank_choices = Staff.RANK_CHOICES\n    if request.method == 'POST':\n        profile_pic = request.FILES.get('profile_pic')\n        first_name = request.POST.get('first_name')\n        last_name = request.POST.get('last_name')\n        email = request.POST.get('email')\n        username = request.POST.get('username')",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "DELETE_STAFF",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def DELETE_STAFF(request, id):\n    staff = get_object_or_404(CustomUser, id=id)\n    staff.delete()\n    messages.success(request, 'Record has been deleted successfully.')\n    return redirect('staff_list')  # Redirect to the list view after successful deletion\n@login_required(login_url='/')\ndef ADD_SESSION(request):\n    if request.method == 'POST':\n        session_year_start = request.POST.get('session_year_start')\n        session_year_end = request.POST.get('session_year_start')",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "ADD_SESSION",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def ADD_SESSION(request):\n    if request.method == 'POST':\n        session_year_start = request.POST.get('session_year_start')\n        session_year_end = request.POST.get('session_year_start')\n        session = Session_year(\n            session_start =session_year_start,\n            session_end = session_year_end,\n        )\n        session.save()\n        messages.success(request,'Successfuly Created')",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "VIEW_SESSION",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def VIEW_SESSION(request):\n    session = Session_year.objects.all()\n    context = {\n        'session': session,\n    }\n    return render(request,'Hod/view_session.html',context)\n@login_required(login_url='/')\ndef EDIT_SESSION(request,id):\n    session = Session_year.objects.filter(id= id)\n    context ={",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "EDIT_SESSION",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def EDIT_SESSION(request,id):\n    session = Session_year.objects.filter(id= id)\n    context ={\n        'session': session,\n    }\n    return render(request,'Hod/edit_session.html',context)\n@login_required(login_url='/')\ndef UPDATE_SESSION(request):\n    if request.method == 'POST':\n        session_id = request.POST.get('session_id')",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "UPDATE_SESSION",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def UPDATE_SESSION(request):\n    if request.method == 'POST':\n        session_id = request.POST.get('session_id')\n        session_year_start = request.POST.get('session_year_start')\n        session_year_end = request.POST.get('session_year_end')\n        session = Session_year(\n            id = session_id,\n            session_start =session_year_start,\n            session_end = session_year_end\n        )",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "DELETE_SESSION",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def DELETE_SESSION(request,id):\n    session = Session_year.objects.get(id= id)\n    session.delete()\n    messages.success(request,'Session Are Sueccessfully Delete')\n    return redirect('view_session')\ndef STAFF_SEND_NOTIFICATION(request):\n    staff = Staff.objects.all()\n    see_nofification = Staff_Notification.objects.all().order_by('-id')[0:5]\n    context ={\n        'staff':staff,",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "STAFF_SEND_NOTIFICATION",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def STAFF_SEND_NOTIFICATION(request):\n    staff = Staff.objects.all()\n    see_nofification = Staff_Notification.objects.all().order_by('-id')[0:5]\n    context ={\n        'staff':staff,\n        'see_nofification' : see_nofification,\n    }\n    return render(request,'Hod/staff_notification.html',context)\ndef SAVE_NOTIFICATION(request):\n    if request.method == 'POST':",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "SAVE_NOTIFICATION",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def SAVE_NOTIFICATION(request):\n    if request.method == 'POST':\n        staff_id =request.POST.get('staff_id')\n        message = request.POST.get('message')\n        staff = Staff.objects.get(admin = staff_id)\n        notification = Staff_Notification(\n            staff_id = staff,\n            message = message,\n        )\n        notification.save()",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "STAFF_LEAVE_VIEW",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def STAFF_LEAVE_VIEW(request):\n    staff_leave = Staff_leave.objects.all()\n    context ={\n        \"staff_leave\" : staff_leave,\n    }\n    return render(request,'Hod/staff_leave.html',context)\ndef STAFF_APPROVE_LEAVE(request,id):\n    leave = Staff_leave.objects.get(id =id)\n    leave.status = 1\n    leave.save()",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "STAFF_APPROVE_LEAVE",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def STAFF_APPROVE_LEAVE(request,id):\n    leave = Staff_leave.objects.get(id =id)\n    leave.status = 1\n    leave.save()\n    return redirect('staff_leave_view')\ndef STAFF_DISAPPROVE_LEAVE(request,id):\n    leave = Staff_leave.objects.get(id = id)\n    leave.status =2\n    leave.save()\n    return redirect('staff_leave_view')",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "STAFF_DISAPPROVE_LEAVE",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def STAFF_DISAPPROVE_LEAVE(request,id):\n    leave = Staff_leave.objects.get(id = id)\n    leave.status =2\n    leave.save()\n    return redirect('staff_leave_view')\ndef STAFF_FEEDBACK(request):\n    feedback = Staff_Feedback.objects.all()\n    context = {\n        'feedback' : feedback,\n    }",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "STAFF_FEEDBACK",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def STAFF_FEEDBACK(request):\n    feedback = Staff_Feedback.objects.all()\n    context = {\n        'feedback' : feedback,\n    }\n    return render (request, 'Hod/staff_feedback.html',context)\ndef STAFF_FEEDBACK_REPLY(request):\n    if request.method == 'POST':\n        feedback_id = request.POST.get('feedback_id')\n        feedback_reply = request.POST.get('feedback_reply')",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "STAFF_FEEDBACK_REPLY",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def STAFF_FEEDBACK_REPLY(request):\n    if request.method == 'POST':\n        feedback_id = request.POST.get('feedback_id')\n        feedback_reply = request.POST.get('feedback_reply')\n        feedback = Staff_Feedback.objects.get(id=feedback_id)\n        feedback.feedback_reply = feedback_reply\n        feedback.save()\n        return redirect('staff_feedback')\ndef create_routine(request):\n    # Get the logged-in staff member",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "create_routine",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def create_routine(request):\n    # Get the logged-in staff member\n    staff = Staff.objects.get(admin=request.user.id)\n    if request.method == 'POST':\n        form = RoutineForm(request.POST)\n        if form.is_valid():\n            subject = form.cleaned_data.get('subject')\n            day = form.cleaned_data.get('day')\n            start_time = form.cleaned_data.get('start_time')\n            end_time = form.cleaned_data.get('end_time')",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "check_conflicts",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def check_conflicts(request):\n    teacher_id = request.GET.get('teacher')\n    day = request.GET.get('day')\n    routines = Routine.objects.filter(teacher_id=teacher_id, day=day)\n    routines_data = [{\n        'subject': routine.subject.id,\n        'start_time': routine.start_time.strftime('%H:%M'),\n        'end_time': routine.end_time.strftime('%H:%M')\n    } for routine in routines]\n    return JsonResponse(routines_data, safe=False)   ",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "teacher_weekly_routine_view",
        "kind": 2,
        "importPath": "Student_Management_systems.Hod_views",
        "description": "Student_Management_systems.Hod_views",
        "peekOfCode": "def teacher_weekly_routine_view(request, teacher_id):\n# Get the teacher object or return a 404 if not found\n    teacher = get_object_or_404(Staff, id=teacher_id)\n    # Initialize a dictionary to store routines by day\n    weekly_routines = {day: [] for day, _ in Routine.DAY_CHOICES}\n    # Get all routines for this teacher\n    routines = Routine.objects.filter(teacher=teacher).order_by('day', 'start_time')\n    for routine in routines:\n        # Check for overlap\n        overlap_routine = Routine.objects.filter(",
        "detail": "Student_Management_systems.Hod_views",
        "documentation": {}
    },
    {
        "label": "HOME",
        "kind": 2,
        "importPath": "Student_Management_systems.Staff_Views",
        "description": "Student_Management_systems.Staff_Views",
        "peekOfCode": "def HOME(request):\n    return render(request,'Staff/home.html')\ndef NOTIFICATIONS(request):\n    staff = Staff.objects.filter(admin=request.user.id)\n    notifications = []\n    for i in staff:\n        staff_id = i.id\n        notification = Staff_Notification.objects.filter(staff_id=staff_id)\n        notifications.extend(notification)\n    context = {",
        "detail": "Student_Management_systems.Staff_Views",
        "documentation": {}
    },
    {
        "label": "NOTIFICATIONS",
        "kind": 2,
        "importPath": "Student_Management_systems.Staff_Views",
        "description": "Student_Management_systems.Staff_Views",
        "peekOfCode": "def NOTIFICATIONS(request):\n    staff = Staff.objects.filter(admin=request.user.id)\n    notifications = []\n    for i in staff:\n        staff_id = i.id\n        notification = Staff_Notification.objects.filter(staff_id=staff_id)\n        notifications.extend(notification)\n    context = {\n        'notification': notifications,\n    }",
        "detail": "Student_Management_systems.Staff_Views",
        "documentation": {}
    },
    {
        "label": "STAFF_NOTIFICATION_MARK_AS_DONE",
        "kind": 2,
        "importPath": "Student_Management_systems.Staff_Views",
        "description": "Student_Management_systems.Staff_Views",
        "peekOfCode": "def STAFF_NOTIFICATION_MARK_AS_DONE(request,status):\n    notification =Staff_Notification.objects.get(id = status)\n    notification.status = 1\n    notification.save()\n    return redirect('notification')\ndef STAFF_APPLY_LEAVE(request):\n    staff = Staff.objects.filter(admin = request.user.id)\n    for i in staff:\n        staff_id = i.id\n        staff_leave_history = Staff_leave.objects.filter(staff_id = staff_id)",
        "detail": "Student_Management_systems.Staff_Views",
        "documentation": {}
    },
    {
        "label": "STAFF_APPLY_LEAVE",
        "kind": 2,
        "importPath": "Student_Management_systems.Staff_Views",
        "description": "Student_Management_systems.Staff_Views",
        "peekOfCode": "def STAFF_APPLY_LEAVE(request):\n    staff = Staff.objects.filter(admin = request.user.id)\n    for i in staff:\n        staff_id = i.id\n        staff_leave_history = Staff_leave.objects.filter(staff_id = staff_id)\n        context = {\n            'staff_leave_history' : staff_leave_history,\n        }\n    return render(request,'Staff/apply_leave.html',context)\ndef STAFF_APPLY_LEAVE_SAVE(request):",
        "detail": "Student_Management_systems.Staff_Views",
        "documentation": {}
    },
    {
        "label": "STAFF_APPLY_LEAVE_SAVE",
        "kind": 2,
        "importPath": "Student_Management_systems.Staff_Views",
        "description": "Student_Management_systems.Staff_Views",
        "peekOfCode": "def STAFF_APPLY_LEAVE_SAVE(request):\n    if request.method == 'POST':\n        leave_date =request.POST.get('leave_date')\n        leave_message = request.POST.get('leave_message')\n        staff = Staff.objects.get(admin = request.user.id )\n        leave = Staff_leave(\n            staff_id = staff,\n            date = leave_date,\n            message = leave_message,\n        )",
        "detail": "Student_Management_systems.Staff_Views",
        "documentation": {}
    },
    {
        "label": "STAFF_FEEDBACK",
        "kind": 2,
        "importPath": "Student_Management_systems.Staff_Views",
        "description": "Student_Management_systems.Staff_Views",
        "peekOfCode": "def STAFF_FEEDBACK(request):\n    staff_id = Staff.objects.get(admin = request.user.id)\n    feedback_history = Staff_Feedback.objects.filter(staff_id =staff_id)\n    context = {\n     'feedback_history' : feedback_history,\n    }\n    return render(request,'Staff/feedback.html',context)\ndef STAFF_FEEDBACK_SAVE(request):\n    if  request.method == 'POST':\n        feedback = request.POST.get('feedback')",
        "detail": "Student_Management_systems.Staff_Views",
        "documentation": {}
    },
    {
        "label": "STAFF_FEEDBACK_SAVE",
        "kind": 2,
        "importPath": "Student_Management_systems.Staff_Views",
        "description": "Student_Management_systems.Staff_Views",
        "peekOfCode": "def STAFF_FEEDBACK_SAVE(request):\n    if  request.method == 'POST':\n        feedback = request.POST.get('feedback')\n        staff = Staff.objects.get(admin = request.user.id )\n        feedback=Staff_Feedback(\n            staff_id = staff,\n            feedback = feedback,\n            feedback_reply = \" \",\n        )\n        feedback.save()",
        "detail": "Student_Management_systems.Staff_Views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "Student_Management_systems.asgi",
        "description": "Student_Management_systems.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "Student_Management_systems.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-jmv4$@0i7hhzevwi7f*8e5r4vl0!6aq_j@6u1%72=!e6@9njfy'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-jmv4$@0i7hhzevwi7f*8e5r4vl0!6aq_j@6u1%72=!e6@9njfy'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app',",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'app',\n    'active_link',\n    'question',",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'Student_Management_systems.urls'",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "ROOT_URLCONF = 'Student_Management_systems.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': ['templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "WSGI_APPLICATION = 'Student_Management_systems.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT ='/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR,'static')",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT ='/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR,'static')\n]",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT ='/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR,'static')\n]\n# Default primary key field type",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT ='/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR,'static')\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATIC_ROOT ='/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR,'static')\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'app.CustomUser'",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR,'static')\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'app.CustomUser'",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'app.CustomUser'",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "Student_Management_systems.settings",
        "description": "Student_Management_systems.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'app.CustomUser'",
        "detail": "Student_Management_systems.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "Student_Management_systems.urls",
        "description": "Student_Management_systems.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('base/',views.BASE,name='base'),\n    #Login path\n    path('',views.LOGIN,name='login'),\n    path('doLogin',views.doLogin,name='doLogin'),\n    path('doLogout',views.doLogout,name='logout'),\n    path('profile/update',views.PROFILE_UPDATE,name= 'profile_update'),\n    # profile Update\n    path('profile',views.PROFILE, name='profile'),",
        "detail": "Student_Management_systems.urls",
        "documentation": {}
    },
    {
        "label": "BASE",
        "kind": 2,
        "importPath": "Student_Management_systems.views",
        "description": "Student_Management_systems.views",
        "peekOfCode": "def BASE(request):\n    return render(request,'base.html')\ndef LOGIN(request):\n    return render(request,'login.html')\ndef doLogin(request):\n    if request.method == \"POST\":\n       user = EmailBackEand.authenticate(request,\n                                        username=request.POST.get('email'),\n                                        password=request.POST.get('password'),)\n       if user!=None:",
        "detail": "Student_Management_systems.views",
        "documentation": {}
    },
    {
        "label": "LOGIN",
        "kind": 2,
        "importPath": "Student_Management_systems.views",
        "description": "Student_Management_systems.views",
        "peekOfCode": "def LOGIN(request):\n    return render(request,'login.html')\ndef doLogin(request):\n    if request.method == \"POST\":\n       user = EmailBackEand.authenticate(request,\n                                        username=request.POST.get('email'),\n                                        password=request.POST.get('password'),)\n       if user!=None:\n           login(request,user)\n           user_type = user.user_type",
        "detail": "Student_Management_systems.views",
        "documentation": {}
    },
    {
        "label": "doLogin",
        "kind": 2,
        "importPath": "Student_Management_systems.views",
        "description": "Student_Management_systems.views",
        "peekOfCode": "def doLogin(request):\n    if request.method == \"POST\":\n       user = EmailBackEand.authenticate(request,\n                                        username=request.POST.get('email'),\n                                        password=request.POST.get('password'),)\n       if user!=None:\n           login(request,user)\n           user_type = user.user_type\n           if user_type == '1':\n               return redirect('hod_home')",
        "detail": "Student_Management_systems.views",
        "documentation": {}
    },
    {
        "label": "doLogout",
        "kind": 2,
        "importPath": "Student_Management_systems.views",
        "description": "Student_Management_systems.views",
        "peekOfCode": "def doLogout(request):\n    logout(request)\n    return redirect('login')\ndef PROFILE(request):\n    user = CustomUser.objects.get(id = request.user.id)\n    context = {\n        'user': user,\n    }\n    return render(request,'profile.html',context)\ndef PROFILE_UPDATE(request):",
        "detail": "Student_Management_systems.views",
        "documentation": {}
    },
    {
        "label": "PROFILE",
        "kind": 2,
        "importPath": "Student_Management_systems.views",
        "description": "Student_Management_systems.views",
        "peekOfCode": "def PROFILE(request):\n    user = CustomUser.objects.get(id = request.user.id)\n    context = {\n        'user': user,\n    }\n    return render(request,'profile.html',context)\ndef PROFILE_UPDATE(request):\n    if request.method == 'POST':\n        profile_pic = request.FILES.get('profile_pic')\n        first_name = request.POST.get('first_name')",
        "detail": "Student_Management_systems.views",
        "documentation": {}
    },
    {
        "label": "PROFILE_UPDATE",
        "kind": 2,
        "importPath": "Student_Management_systems.views",
        "description": "Student_Management_systems.views",
        "peekOfCode": "def PROFILE_UPDATE(request):\n    if request.method == 'POST':\n        profile_pic = request.FILES.get('profile_pic')\n        first_name = request.POST.get('first_name')\n        last_name = request.POST.get('last_name')\n        email = request.POST.get('email')\n        username = request.POST.get('username')\n        password = request.POST.get('password')\n        try:\n            customuser = CustomUser.objects.get(id=request.user.id)",
        "detail": "Student_Management_systems.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "Student_Management_systems.wsgi",
        "description": "Student_Management_systems.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "Student_Management_systems.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0001_initial",
        "description": "app.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomUser',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "app.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0002_course_session_year",
        "description": "app.migrations.0002_course_session_year",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Course',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "app.migrations.0002_course_session_year",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0003_student",
        "description": "app.migrations.0003_student",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0002_course_session_year'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Student',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('address', models.TextField()),",
        "detail": "app.migrations.0003_student",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0004_staff",
        "description": "app.migrations.0004_staff",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0003_student'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Staff',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('address', models.TextField()),",
        "detail": "app.migrations.0004_staff",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0005_subject",
        "description": "app.migrations.0005_subject",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0004_staff'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Subject',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "app.migrations.0005_subject",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0006_alter_subject_created_at",
        "description": "app.migrations.0006_alter_subject_created_at",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0005_subject'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='subject',\n            name='created_at',\n            field=models.DateTimeField(auto_now_add=True, null=True),\n        ),",
        "detail": "app.migrations.0006_alter_subject_created_at",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0007_staff_notification",
        "description": "app.migrations.0007_staff_notification",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0006_alter_subject_created_at'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Staff_Notification',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('message', models.TextField()),",
        "detail": "app.migrations.0007_staff_notification",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0008_staff_notification_status",
        "description": "app.migrations.0008_staff_notification_status",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0007_staff_notification'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='staff_notification',\n            name='status',\n            field=models.ImageField(default=0, null=True, upload_to=''),\n        ),",
        "detail": "app.migrations.0008_staff_notification_status",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0009_staff_leave",
        "description": "app.migrations.0009_staff_leave",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0008_staff_notification_status'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Staff_leave',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('date', models.CharField(max_length=100)),",
        "detail": "app.migrations.0009_staff_leave",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0010_program_rename_name_course_course_name_and_more",
        "description": "app.migrations.0010_program_rename_name_course_course_name_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0009_staff_leave'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Program',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(choices=[('BSc', 'Bachelor of Science'), ('MSc', 'Master of Science')], max_length=10)),",
        "detail": "app.migrations.0010_program_rename_name_course_course_name_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0011_department_semester_department",
        "description": "app.migrations.0011_department_semester_department",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0010_program_rename_name_course_course_name_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Department',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('dept_name', models.CharField(max_length=20)),",
        "detail": "app.migrations.0011_department_semester_department",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0012_remove_department_program_remove_semester_department_and_more",
        "description": "app.migrations.0012_remove_department_program_remove_semester_department_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0011_department_semester_department'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='department',\n            name='program',\n        ),\n        migrations.RemoveField(",
        "detail": "app.migrations.0012_remove_department_program_remove_semester_department_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0013_student_semester",
        "description": "app.migrations.0013_student_semester",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('course', '0007_remove_teacher_staff'),\n        ('app', '0012_remove_department_program_remove_semester_department_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='student',\n            name='semester',\n            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='course.semester'),",
        "detail": "app.migrations.0013_student_semester",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0014_alter_student_semester_alter_student_session_year_id",
        "description": "app.migrations.0014_alter_student_semester_alter_student_session_year_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('course', '0007_remove_teacher_staff'),\n        ('app', '0013_student_semester'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='student',\n            name='semester',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='course.semester'),",
        "detail": "app.migrations.0014_alter_student_semester_alter_student_session_year_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0015_staff_department_staff_rank",
        "description": "app.migrations.0015_staff_department_staff_rank",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('course', '0007_remove_teacher_staff'),\n        ('app', '0014_alter_student_semester_alter_student_session_year_id'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='staff',\n            name='department',\n            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teachers_staff', to='course.department'),",
        "detail": "app.migrations.0015_staff_department_staff_rank",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0016_routine",
        "description": "app.migrations.0016_routine",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('course', '0008_remove_teacher_department_delete_routine_and_more'),\n        ('app', '0015_staff_department_staff_rank'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Routine',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "app.migrations.0016_routine",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0017_remove_staff_update_at_staff_email_staff_first_name_and_more",
        "description": "app.migrations.0017_remove_staff_update_at_staff_email_staff_first_name_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('course', '0008_remove_teacher_department_delete_routine_and_more'),\n        ('app', '0016_routine'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='staff',\n            name='update_at',\n        ),",
        "detail": "app.migrations.0017_remove_staff_update_at_staff_email_staff_first_name_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0018_staff_password",
        "description": "app.migrations.0018_staff_password",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0017_remove_staff_update_at_staff_email_staff_first_name_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='staff',\n            name='password',\n            field=models.CharField(default=1, max_length=128),\n            preserve_default=False,",
        "detail": "app.migrations.0018_staff_password",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0019_remove_student_session_year_id",
        "description": "app.migrations.0019_remove_student_session_year_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0018_staff_password'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='student',\n            name='session_year_id',\n        ),\n    ]",
        "detail": "app.migrations.0019_remove_student_session_year_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0020_remove_staff_password_remove_staff_username",
        "description": "app.migrations.0020_remove_staff_password_remove_staff_username",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0019_remove_student_session_year_id'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='staff',\n            name='password',\n        ),\n        migrations.RemoveField(",
        "detail": "app.migrations.0020_remove_staff_password_remove_staff_username",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0021_alter_staff_notification_status",
        "description": "app.migrations.0021_alter_staff_notification_status",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0020_remove_staff_password_remove_staff_username'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='staff_notification',\n            name='status',\n            field=models.IntegerField(default=1, null=True),\n        ),",
        "detail": "app.migrations.0021_alter_staff_notification_status",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.migrations.0022_staff_feedback",
        "description": "app.migrations.0022_staff_feedback",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0021_alter_staff_notification_status'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Staff_Feedback',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('feedback', models.TextField()),",
        "detail": "app.migrations.0022_staff_feedback",
        "documentation": {}
    },
    {
        "label": "EmailBackEand",
        "kind": 6,
        "importPath": "app.EmailBackEand",
        "description": "app.EmailBackEand",
        "peekOfCode": "class EmailBackEand(ModelBackend):\n    def authenticate(self, username=None, password=None, **kwargs):\n        UserModel = get_user_model()\n        try:\n            user = UserModel.objects.get(email=username)\n        except UserModel.DoesNotExist:\n            return None\n        else:\n            if user.check_password(password):\n                return user",
        "detail": "app.EmailBackEand",
        "documentation": {}
    },
    {
        "label": "UserModel",
        "kind": 6,
        "importPath": "app.admin",
        "description": "app.admin",
        "peekOfCode": "class UserModel(UserAdmin):\n    list_display = ['username','user_type']\nadmin.site.register(CustomUser,UserModel)\nadmin.site.register(Session_year)\nadmin.site.register(Student)\nadmin.site.register(Staff)\n# admin.site.register(Subject)\nadmin.site.register(Staff_Notification)\nadmin.site.register(Staff_leave)\nadmin.site.register(Routine)",
        "detail": "app.admin",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "kind": 6,
        "importPath": "app.apps",
        "description": "app.apps",
        "peekOfCode": "class AppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'app'",
        "detail": "app.apps",
        "documentation": {}
    },
    {
        "label": "RoutineForm",
        "kind": 6,
        "importPath": "app.forms",
        "description": "app.forms",
        "peekOfCode": "class RoutineForm(forms.ModelForm):\n    class Meta:\n        model = Routine\n        fields = ['semester', 'subject', 'day', 'start_time', 'end_time']  # Removed 'teacher'\n        widgets = {\n            'semester': forms.Select(attrs={'class': 'form-control'}),\n            'subject': forms.Select(attrs={'class': 'form-control'}),\n            'day': forms.Select(attrs={'class': 'form-control'}),\n            'start_time': forms.TimeInput(attrs={'class': 'form-control', 'type': 'time'}),\n            'end_time': forms.TimeInput(attrs={'class': 'form-control', 'type': 'time'}),",
        "detail": "app.forms",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class CustomUser(AbstractUser):\n    USER = (\n        (1,'HOD'),\n        (2,'STAFF'),\n        (3,'STUDENT'),\n    )\n    user_type = models.CharField(choices=USER,max_length=50,default=1)\n    profile_pic = models.ImageField(upload_to='media/profile_pic')\nclass Session_year(models.Model):\n    session_start = models.CharField(max_length=100)",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Session_year",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class Session_year(models.Model):\n    session_start = models.CharField(max_length=100)\n    session_end = models.CharField(max_length=100)\n    def __str__(self):\n        return self.session_start + \" To \" + self. session_end\nclass Student(models.Model):\n    admin = models.OneToOneField(CustomUser, on_delete=models.CASCADE)\n    semester=models.ForeignKey(Semester, on_delete=models.DO_NOTHING)\n    address = models.TextField()\n    gender = models.CharField(max_length=100)",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class Student(models.Model):\n    admin = models.OneToOneField(CustomUser, on_delete=models.CASCADE)\n    semester=models.ForeignKey(Semester, on_delete=models.DO_NOTHING)\n    address = models.TextField()\n    gender = models.CharField(max_length=100)\n    created_at = models.DateTimeField(auto_now_add=True)\n    update_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.admin.first_name + \" \" + self.admin.last_name\nclass Staff(models.Model):",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Staff",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class Staff(models.Model):\n    RANK_CHOICES = [\n        ('CH', 'Chairman'),\n        ('AP', 'Associate Professor'),\n        ('AS', 'Assistant Professor'),\n        ('LE', 'Lecturer'),\n    ]\n    admin = models.OneToOneField(CustomUser,on_delete=models.CASCADE)\n    profile_pic = models.ImageField(upload_to='profile_pics/', null=True, blank=True)\n    first_name = models.CharField(max_length=100 ,null=True, blank=True)",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Staff_Notification",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class Staff_Notification(models.Model):\n    staff_id = models.ForeignKey(Staff,on_delete=models.CASCADE)\n    message = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    status =models.IntegerField(null=True,default=1)\n    def __str__(self):\n        return self.staff_id.admin.first_name\nclass Staff_leave(models.Model):\n    staff_id = models.ForeignKey(Staff,on_delete=models.CASCADE)\n    date =  models.CharField(max_length=100)",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Staff_leave",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class Staff_leave(models.Model):\n    staff_id = models.ForeignKey(Staff,on_delete=models.CASCADE)\n    date =  models.CharField(max_length=100)\n    message = models.TextField()\n    status = models.IntegerField(default=0)\n    created_at = models.DateTimeField(auto_now=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.staff_id.admin.first_name + self.staff_id.admin.last_name\nclass Staff_Feedback(models.Model):",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Staff_Feedback",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class Staff_Feedback(models.Model):\n    staff_id=models.ForeignKey(Staff,on_delete=models.CASCADE)\n    feedback=models.TextField()\n    feedback_reply =models.TextField()\n    created_at=models.DateTimeField(auto_now_add=True)\n    updated_at=models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return self.staff_id.admin.first_name + self.staff_id.admin.last_name\nclass Routine(models.Model):\n    DAY_CHOICES = [",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "Routine",
        "kind": 6,
        "importPath": "app.models",
        "description": "app.models",
        "peekOfCode": "class Routine(models.Model):\n    DAY_CHOICES = [\n        ('Sun', 'Sunday'),\n        ('Mon', 'Monday'),\n        ('Tue', 'Tuesday'),\n        ('Wed', 'Wednesday'),\n        ('Thu', 'Thursday'),\n        ('Fri', 'Friday'),\n    ]\n    semester = models.ForeignKey(Semester, on_delete=models.CASCADE, related_name='routines')",
        "detail": "app.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.urls",
        "description": "app.urls",
        "peekOfCode": "urlpatterns = [\n    path('routine/add/', RoutineCreateView.as_view(), name='routine-add'),\n    path('routine/<int:pk>/update/', RoutineUpdateView.as_view(), name='routine-update'),\n]",
        "detail": "app.urls",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "course.migrations.0001_initial",
        "description": "course.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Department',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('dept_name', models.CharField(max_length=20)),",
        "detail": "course.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "course.migrations.0002_alter_program_name",
        "description": "course.migrations.0002_alter_program_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('course', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='program',\n            name='name',\n            field=models.CharField(choices=[('BSc', 'Bachelor of Science'), ('MSc', 'Master of Science')], max_length=3, unique=True),\n        ),",
        "detail": "course.migrations.0002_alter_program_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "course.migrations.0003_remove_course_course_code_remove_course_course_name_and_more",
        "description": "course.migrations.0003_remove_course_course_code_remove_course_course_name_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('course', '0002_alter_program_name'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='course',\n            name='course_code',\n        ),\n        migrations.RemoveField(",
        "detail": "course.migrations.0003_remove_course_course_code_remove_course_course_name_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "course.migrations.0004_alter_semester_name_course_unique_semester",
        "description": "course.migrations.0004_alter_semester_name_course_unique_semester",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('course', '0003_remove_course_course_code_remove_course_course_name_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='semester',\n            name='name',\n            field=models.CharField(max_length=20, unique=True),\n        ),",
        "detail": "course.migrations.0004_alter_semester_name_course_unique_semester",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "course.migrations.0005_subject_teacher_routine",
        "description": "course.migrations.0005_subject_teacher_routine",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0012_remove_department_program_remove_semester_department_and_more'),\n        ('course', '0004_alter_semester_name_course_unique_semester'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Subject',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "course.migrations.0005_subject_teacher_routine",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "course.migrations.0006_alter_routine_day",
        "description": "course.migrations.0006_alter_routine_day",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('course', '0005_subject_teacher_routine'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='routine',\n            name='day',\n            field=models.CharField(choices=[('Sun', 'Sunday'), ('Mon', 'Monday'), ('Tue', 'Tuesday'), ('Wed', 'Wednesday'), ('Thu', 'Thursday'), ('Fri', 'Friday')], max_length=3),\n        ),",
        "detail": "course.migrations.0006_alter_routine_day",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "course.migrations.0007_remove_teacher_staff",
        "description": "course.migrations.0007_remove_teacher_staff",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('course', '0006_alter_routine_day'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='teacher',\n            name='staff',\n        ),\n    ]",
        "detail": "course.migrations.0007_remove_teacher_staff",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "course.migrations.0008_remove_teacher_department_delete_routine_and_more",
        "description": "course.migrations.0008_remove_teacher_department_delete_routine_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('course', '0007_remove_teacher_staff'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='teacher',\n            name='department',\n        ),\n        migrations.DeleteModel(",
        "detail": "course.migrations.0008_remove_teacher_department_delete_routine_and_more",
        "documentation": {}
    },
    {
        "label": "getattr_custom",
        "kind": 2,
        "importPath": "course.templatetags.custom_filters",
        "description": "course.templatetags.custom_filters",
        "peekOfCode": "def getattr_custom(obj, attr_name):\n    return getattr(obj, attr_name, None)",
        "detail": "course.templatetags.custom_filters",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "course.templatetags.custom_filters",
        "description": "course.templatetags.custom_filters",
        "peekOfCode": "register = template.Library()\n@register.filter\ndef getattr_custom(obj, attr_name):\n    return getattr(obj, attr_name, None)",
        "detail": "course.templatetags.custom_filters",
        "documentation": {}
    },
    {
        "label": "SubjectAdmin",
        "kind": 6,
        "importPath": "course.admin",
        "description": "course.admin",
        "peekOfCode": "class SubjectAdmin(admin.ModelAdmin):\n    list_display = ('sub_code', 'sub_name', 'credit')\n    search_fields = ('sub_code', 'sub_name')\nclass UserModel(UserAdmin):\n    list_display = ['username','user_type']\nadmin.site.register(Program)\nadmin.site.register(Department)\nadmin.site.register(Semester)\nadmin.site.register(Course)",
        "detail": "course.admin",
        "documentation": {}
    },
    {
        "label": "UserModel",
        "kind": 6,
        "importPath": "course.admin",
        "description": "course.admin",
        "peekOfCode": "class UserModel(UserAdmin):\n    list_display = ['username','user_type']\nadmin.site.register(Program)\nadmin.site.register(Department)\nadmin.site.register(Semester)\nadmin.site.register(Course)",
        "detail": "course.admin",
        "documentation": {}
    },
    {
        "label": "CourseConfig",
        "kind": 6,
        "importPath": "course.apps",
        "description": "course.apps",
        "peekOfCode": "class CourseConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'course'",
        "detail": "course.apps",
        "documentation": {}
    },
    {
        "label": "ProgramForm",
        "kind": 6,
        "importPath": "course.forms",
        "description": "course.forms",
        "peekOfCode": "class ProgramForm(forms.ModelForm):\n    class Meta:\n        model = Program\n        fields = ['name']\n        widgets = {\n            'name': forms.Select(attrs={'class': 'form-control'}),\n        }\nclass DepartmentForm(forms.ModelForm):\n    class Meta:\n        model = Department",
        "detail": "course.forms",
        "documentation": {}
    },
    {
        "label": "DepartmentForm",
        "kind": 6,
        "importPath": "course.forms",
        "description": "course.forms",
        "peekOfCode": "class DepartmentForm(forms.ModelForm):\n    class Meta:\n        model = Department\n        fields = ['program', 'dept_name']\n        widgets = {\n            'program': forms.Select(attrs={'class': 'form-control'}),\n            'dept_name': forms.TextInput(attrs={'class': 'form-control'}),\n        }\nclass SemesterForm(forms.ModelForm):\n    class Meta:",
        "detail": "course.forms",
        "documentation": {}
    },
    {
        "label": "SemesterForm",
        "kind": 6,
        "importPath": "course.forms",
        "description": "course.forms",
        "peekOfCode": "class SemesterForm(forms.ModelForm):\n    class Meta:\n        model = Semester\n        fields = ['program', 'department', 'name']\n        widgets = {\n            'program': forms.Select(attrs={'class': 'form-control', 'id': 'id_program'}),\n            'department': forms.Select(attrs={'class': 'form-control', 'id': 'id_department'}),\n            'name': forms.TextInput(attrs={'class': 'form-control'}),\n        }\nclass CourseForm(forms.ModelForm):",
        "detail": "course.forms",
        "documentation": {}
    },
    {
        "label": "CourseForm",
        "kind": 6,
        "importPath": "course.forms",
        "description": "course.forms",
        "peekOfCode": "class CourseForm(forms.ModelForm):\n    class Meta:\n        model = Course\n        fields = [\n            'semester',\n            'course_code_1', 'course_name_1', 'credits_1',\n            'course_code_2', 'course_name_2', 'credits_2',\n            'course_code_3', 'course_name_3', 'credits_3',\n            'course_code_4', 'course_name_4', 'credits_4',\n            'course_code_5', 'course_name_5', 'credits_5',",
        "detail": "course.forms",
        "documentation": {}
    },
    {
        "label": "SubjectForm",
        "kind": 6,
        "importPath": "course.forms",
        "description": "course.forms",
        "peekOfCode": "class SubjectForm(forms.ModelForm):\n    class Meta:\n        model = Subject\n        fields = ['sub_code', 'sub_name', 'credit']\n        widgets = {\n            'sub_code': forms.TextInput(attrs={'class': 'form-control'}),\n            'sub_name': forms.TextInput(attrs={'class': 'form-control'}),\n            'credit': forms.NumberInput(attrs={'class': 'form-control'}),\n        }",
        "detail": "course.forms",
        "documentation": {}
    },
    {
        "label": "Program",
        "kind": 6,
        "importPath": "course.models",
        "description": "course.models",
        "peekOfCode": "class Program(models.Model):\n    PROGRAM_CHOICES = [\n        ('BSc', 'Bachelor of Science'),\n        ('MSc', 'Master of Science'),\n    ]\n    name = models.CharField(max_length=3, choices=PROGRAM_CHOICES, unique=True)\n    def __str__(self):\n        return self.get_name_display()\nclass Department(models.Model):\n    program = models.ForeignKey(Program, on_delete=models.CASCADE, related_name='department')",
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Department",
        "kind": 6,
        "importPath": "course.models",
        "description": "course.models",
        "peekOfCode": "class Department(models.Model):\n    program = models.ForeignKey(Program, on_delete=models.CASCADE, related_name='department')\n    dept_name = models.CharField(max_length=20)\n    def __str__(self):\n        return f\"{self.dept_name}\"\nclass Subject(models.Model):\n    sub_code = models.CharField(max_length=10, null=True, blank=True)\n    sub_name = models.CharField(max_length=100, null=True, blank=True)\n    credit = models.IntegerField(null=True, blank=True)\n    def __str__(self):",
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Subject",
        "kind": 6,
        "importPath": "course.models",
        "description": "course.models",
        "peekOfCode": "class Subject(models.Model):\n    sub_code = models.CharField(max_length=10, null=True, blank=True)\n    sub_name = models.CharField(max_length=100, null=True, blank=True)\n    credit = models.IntegerField(null=True, blank=True)\n    def __str__(self):\n        return f\"{self.sub_name}\"\nclass Semester(models.Model):\n    program = models.ForeignKey(Program, on_delete=models.CASCADE, related_name='semesters')\n    department = models.ForeignKey(Department, on_delete=models.CASCADE, related_name='semesters')\n    name = models.CharField(max_length=20, unique=True)",
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Semester",
        "kind": 6,
        "importPath": "course.models",
        "description": "course.models",
        "peekOfCode": "class Semester(models.Model):\n    program = models.ForeignKey(Program, on_delete=models.CASCADE, related_name='semesters')\n    department = models.ForeignKey(Department, on_delete=models.CASCADE, related_name='semesters')\n    name = models.CharField(max_length=20, unique=True)\n    def __str__(self):\n        return f\"{self.program} - {self.name}\"\nclass Course(models.Model):\n    semester = models.ForeignKey(Semester, on_delete=models.CASCADE, related_name='courses')\n    course_code_1 = models.CharField(max_length=10, null=True, blank=True)\n    course_name_1 = models.CharField(max_length=100, null=True, blank=True)",
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "Course",
        "kind": 6,
        "importPath": "course.models",
        "description": "course.models",
        "peekOfCode": "class Course(models.Model):\n    semester = models.ForeignKey(Semester, on_delete=models.CASCADE, related_name='courses')\n    course_code_1 = models.CharField(max_length=10, null=True, blank=True)\n    course_name_1 = models.CharField(max_length=100, null=True, blank=True)\n    credits_1 = models.IntegerField(null=True, blank=True)\n    course_code_2 = models.CharField(max_length=10, null=True, blank=True)\n    course_name_2 = models.CharField(max_length=100, null=True, blank=True)\n    credits_2 = models.IntegerField(null=True, blank=True)\n    course_code_3 = models.CharField(max_length=10, null=True, blank=True)\n    course_name_3 = models.CharField(max_length=100, null=True, blank=True)",
        "detail": "course.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "course.urls",
        "description": "course.urls",
        "peekOfCode": "urlpatterns = [\n    # Program URLs\n    path('programs/', ProgramListView.as_view(), name='program_list'),\n    path('programs/create/', ProgramCreateView.as_view(), name='program_create'),\n    # Department URLs\n    path('departments/', DepartmentListView.as_view(), name='department_list'),\n    path('departments/create/', DepartmentCreateView.as_view(), name='department_create'),\n    path('departments/<int:pk>/update/', DepartmentUpdateView.as_view(), name='department_update'),\n    # Semester URLs\n    path('semesters/', SemesterListView.as_view(), name='semester_list'),",
        "detail": "course.urls",
        "documentation": {}
    },
    {
        "label": "ProgramCreateView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class ProgramCreateView(CreateView):\n    model = Program\n    form_class = ProgramForm\n    template_name = 'course/program_form.html'\n    success_url = reverse_lazy('program_list')\nclass ProgramListView(ListView):\n    model = Program\n    template_name = 'course/program_list.html'\n    context_object_name = 'programs'\n# Department Views",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "ProgramListView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class ProgramListView(ListView):\n    model = Program\n    template_name = 'course/program_list.html'\n    context_object_name = 'programs'\n# Department Views\nclass DepartmentListView(ListView):\n    model = Department\n    template_name = 'course/department_list.html'\n    context_object_name = 'departments'\nclass DepartmentCreateView(CreateView):",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "DepartmentListView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class DepartmentListView(ListView):\n    model = Department\n    template_name = 'course/department_list.html'\n    context_object_name = 'departments'\nclass DepartmentCreateView(CreateView):\n    model = Department\n    form_class = DepartmentForm\n    template_name = 'course/department_form.html'\n    success_url = reverse_lazy('department_list')\nclass DepartmentUpdateView(UpdateView):",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "DepartmentCreateView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class DepartmentCreateView(CreateView):\n    model = Department\n    form_class = DepartmentForm\n    template_name = 'course/department_form.html'\n    success_url = reverse_lazy('department_list')\nclass DepartmentUpdateView(UpdateView):\n    model = Department\n    form_class = DepartmentForm\n    template_name = 'course/department_form.html'\n    success_url = reverse_lazy('department_list')",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "DepartmentUpdateView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class DepartmentUpdateView(UpdateView):\n    model = Department\n    form_class = DepartmentForm\n    template_name = 'course/department_form.html'\n    success_url = reverse_lazy('department_list')\n# Semester Views\nclass SemesterListView(ListView):\n    model = Semester\n    template_name = 'course/semester_list.html'\n    context_object_name = 'semesters'",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "SemesterListView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class SemesterListView(ListView):\n    model = Semester\n    template_name = 'course/semester_list.html'\n    context_object_name = 'semesters'\nclass SemesterCreateView(CreateView):\n    model = Semester\n    form_class = SemesterForm\n    template_name = 'course/semester_form.html'\n    success_url = reverse_lazy('semester_list')\ndef filter_departments(request):",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "SemesterCreateView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class SemesterCreateView(CreateView):\n    model = Semester\n    form_class = SemesterForm\n    template_name = 'course/semester_form.html'\n    success_url = reverse_lazy('semester_list')\ndef filter_departments(request):\n    program_id = request.GET.get('program_id')\n    departments = Department.objects.filter(program_id=program_id)\n    options = '<option value=\"\">---------</option>'\n    for department in departments:",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "SemesterUpdateView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class SemesterUpdateView(UpdateView):\n    model = Semester\n    form_class = SemesterForm\n    template_name = 'course/semester_form.html'\n    success_url = reverse_lazy('semester_list')\nclass SemesterDetailView(DetailView):\n    model = Course\n    template_name = 'course/semester_detail.html'\n    context_object_name = 'course'  # Optional, if you want to use 'course' instead of 'object' in the template\n    def get_context_data(self, **kwargs):",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "SemesterDetailView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class SemesterDetailView(DetailView):\n    model = Course\n    template_name = 'course/semester_detail.html'\n    context_object_name = 'course'  # Optional, if you want to use 'course' instead of 'object' in the template\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        course = self.get_object()\n        # Calculate total credits for the semester\n        total_credits = course.semester.courses.aggregate(total_credits=Sum(\n            Case(",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "CourseListView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class CourseListView(ListView):\n    model = Course\n    template_name = 'course/course_list.html'\n    context_object_name = 'courses'\nclass CourseCreateView(CreateView):\n    model = Course\n    form_class = CourseForm\n    template_name = 'course/course_form.html'\n    success_url = reverse_lazy('semester_list')\nclass CourseUpdateView(UpdateView):",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "CourseCreateView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class CourseCreateView(CreateView):\n    model = Course\n    form_class = CourseForm\n    template_name = 'course/course_form.html'\n    success_url = reverse_lazy('semester_list')\nclass CourseUpdateView(UpdateView):\n    model = Course\n    form_class = CourseForm\n    template_name = 'course/course_form.html'\n    success_url = reverse_lazy('course_list')",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "CourseUpdateView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class CourseUpdateView(UpdateView):\n    model = Course\n    form_class = CourseForm\n    template_name = 'course/course_form.html'\n    success_url = reverse_lazy('course_list')\nclass SubjectListView(ListView):\n    model = Subject\n    template_name = 'course/subject_list.html'\n    context_object_name = 'subjects'\nclass SubjectCreateView(CreateView):",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "SubjectListView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class SubjectListView(ListView):\n    model = Subject\n    template_name = 'course/subject_list.html'\n    context_object_name = 'subjects'\nclass SubjectCreateView(CreateView):\n    model = Subject\n    form_class = SubjectForm\n    template_name = 'course/subject_form.html'\n    success_url = reverse_lazy('subject_list')\nclass SubjectUpdateView(UpdateView):",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "SubjectCreateView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class SubjectCreateView(CreateView):\n    model = Subject\n    form_class = SubjectForm\n    template_name = 'course/subject_form.html'\n    success_url = reverse_lazy('subject_list')\nclass SubjectUpdateView(UpdateView):\n    model = Subject\n    form_class = SubjectForm\n    template_name = 'course/subject_form.html'\n    success_url = reverse_lazy('subject_list')",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "SubjectUpdateView",
        "kind": 6,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "class SubjectUpdateView(UpdateView):\n    model = Subject\n    form_class = SubjectForm\n    template_name = 'course/subject_form.html'\n    success_url = reverse_lazy('subject_list')",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "filter_departments",
        "kind": 2,
        "importPath": "course.views",
        "description": "course.views",
        "peekOfCode": "def filter_departments(request):\n    program_id = request.GET.get('program_id')\n    departments = Department.objects.filter(program_id=program_id)\n    options = '<option value=\"\">---------</option>'\n    for department in departments:\n        options += f'<option value=\"{department.id}\">{department.dept_name}</option>'\n    return JsonResponse({'options': options})\nclass SemesterUpdateView(UpdateView):\n    model = Semester\n    form_class = SemesterForm",
        "detail": "course.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "question.migrations.0001_initial",
        "description": "question.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Exam',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('university_name', models.CharField(blank=True, max_length=100, null=True)),",
        "detail": "question.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "question.migrations.0002_remove_exam_course_code_remove_exam_university_name_and_more",
        "description": "question.migrations.0002_remove_exam_course_code_remove_exam_university_name_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('course', '0007_remove_teacher_staff'),\n        ('question', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='exam',\n            name='course_code',\n        ),",
        "detail": "question.migrations.0002_remove_exam_course_code_remove_exam_university_name_and_more",
        "documentation": {}
    },
    {
        "label": "ExamAdmin",
        "kind": 6,
        "importPath": "question.admin",
        "description": "question.admin",
        "peekOfCode": "class ExamAdmin(admin.ModelAdmin):\n    list_display=[\n        'id',\n    ]",
        "detail": "question.admin",
        "documentation": {}
    },
    {
        "label": "QuestionConfig",
        "kind": 6,
        "importPath": "question.apps",
        "description": "question.apps",
        "peekOfCode": "class QuestionConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'question'",
        "detail": "question.apps",
        "documentation": {}
    },
    {
        "label": "ExamForm",
        "kind": 6,
        "importPath": "question.froms",
        "description": "question.froms",
        "peekOfCode": "class ExamForm(forms.ModelForm):\n    class Meta:\n        model = Exam\n        fields = [\n            'subject_name', 'department_name', 'semester_name', 'batch_number',\n             'name', 'time', 'marks',\n            'q1_number', 'q1_description', 'q1_marks',\n            'q2_number', 'q2_description', 'q2_marks',\n            'q3_number', 'q3_description', 'q3_marks',\n            'q4_number', 'q4_description', 'q4_marks',",
        "detail": "question.froms",
        "documentation": {}
    },
    {
        "label": "Exam",
        "kind": 6,
        "importPath": "question.models",
        "description": "question.models",
        "peekOfCode": "class Exam(models.Model):\n    EXAM_TYPES = [\n        ('Mid', 'Mid Exam'),\n        ('Final', 'Final Exam'),\n    ]\n    subject_name = models.ForeignKey(Subject, on_delete=models.CASCADE, related_name='exams')\n    department_name = models.ForeignKey(Department, on_delete=models.CASCADE, related_name='exams')\n    semester_name = models.ForeignKey(Semester, on_delete=models.CASCADE, related_name='exams')\n    batch_number = models.CharField(max_length=20, null=True, blank=True)\n    name = models.CharField(max_length=5, choices=EXAM_TYPES, default='Mid')",
        "detail": "question.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "question.urls",
        "description": "question.urls",
        "peekOfCode": "urlpatterns = [\n    path('exam/add/', ExamCreateView.as_view(), name='exam-add'),\n    path('exam/<int:pk>/', ExamDetailView.as_view(), name='exam-detail'),\n    path('', ExamListView.as_view(), name='exam-list'),\n    path('exam/<int:pk>/update/', ExamUpdateView.as_view(), name='exam-update'),\n    # path('generate-pdf/<int:exam_id>/', generate_pdf, name='generate_pdf'),\n]",
        "detail": "question.urls",
        "documentation": {}
    },
    {
        "label": "ExamCreateView",
        "kind": 6,
        "importPath": "question.views",
        "description": "question.views",
        "peekOfCode": "class ExamCreateView(View):\n    model = Exam\n    form_class = ExamForm\n    template_name = 'exam/exam_form.html'\n    def get(self, request,*args,**kwargs):\n        form=self.form_class()\n        context={\n            'form':form\n        }\n        return render(request,self.template_name,context)",
        "detail": "question.views",
        "documentation": {}
    },
    {
        "label": "ExamListView",
        "kind": 6,
        "importPath": "question.views",
        "description": "question.views",
        "peekOfCode": "class ExamListView(ListView):\n    model = Exam\n    template_name = 'exam/exam_list.html'\n    context_object_name = 'exams'\n# Exam Update View\nclass ExamUpdateView(UpdateView):\n    model = Exam\n    form_class=ExamForm\n    template_name = 'exam/exam_form.html'\n    success_url = reverse_lazy('exam-list')",
        "detail": "question.views",
        "documentation": {}
    },
    {
        "label": "ExamUpdateView",
        "kind": 6,
        "importPath": "question.views",
        "description": "question.views",
        "peekOfCode": "class ExamUpdateView(UpdateView):\n    model = Exam\n    form_class=ExamForm\n    template_name = 'exam/exam_form.html'\n    success_url = reverse_lazy('exam-list')\nclass ExamDetailView(DetailView):\n    model = Exam\n    template_name = 'exam/exam_detail.html'\n    context_object_name = 'exam'\n# def generate_pdf(request, exam_id):",
        "detail": "question.views",
        "documentation": {}
    },
    {
        "label": "ExamDetailView",
        "kind": 6,
        "importPath": "question.views",
        "description": "question.views",
        "peekOfCode": "class ExamDetailView(DetailView):\n    model = Exam\n    template_name = 'exam/exam_detail.html'\n    context_object_name = 'exam'\n# def generate_pdf(request, exam_id):\n#     # Fetch exam details based on exam_id\n#     exam = get_object_or_404(Exam, id=exam_id)\n#     # Render the template with exam details\n#     html_string = render_to_string('exam_detail.html', {'exam': exam})\n#     # Create an HTML object with WeasyPrint",
        "detail": "question.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "seatplan.migrations.0001_initial",
        "description": "seatplan.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('app', '0012_remove_department_program_remove_semester_department_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Batch',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "seatplan.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "seatplan.migrations.0002_batch_sem_name_alter_seatplan_student",
        "description": "seatplan.migrations.0002_batch_sem_name_alter_seatplan_student",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('app', '0013_student_semester'),\n        ('course', '0007_remove_teacher_staff'),\n        ('seatplan', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='batch',\n            name='sem_name',",
        "detail": "seatplan.migrations.0002_batch_sem_name_alter_seatplan_student",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "seatplan.migrations.0003_seatplanroom",
        "description": "seatplan.migrations.0003_seatplanroom",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('course', '0008_remove_teacher_department_delete_routine_and_more'),\n        ('seatplan', '0002_batch_sem_name_alter_seatplan_student'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='SeatPlanRoom',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "seatplan.migrations.0003_seatplanroom",
        "documentation": {}
    },
    {
        "label": "UserModel",
        "kind": 6,
        "importPath": "seatplan.admin",
        "description": "seatplan.admin",
        "peekOfCode": "class UserModel(UserAdmin):\n    list_display = ['username','user_type']\nadmin.site.register(Room)\nadmin.site.register(Batch)\nadmin.site.register(SeatPlan)\nadmin.site.register(SeatPlanRoom)",
        "detail": "seatplan.admin",
        "documentation": {}
    },
    {
        "label": "SeatplanConfig",
        "kind": 6,
        "importPath": "seatplan.apps",
        "description": "seatplan.apps",
        "peekOfCode": "class SeatplanConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'seatplan'",
        "detail": "seatplan.apps",
        "documentation": {}
    },
    {
        "label": "SeatPlanRoomForm",
        "kind": 6,
        "importPath": "seatplan.forms",
        "description": "seatplan.forms",
        "peekOfCode": "class SeatPlanRoomForm(forms.ModelForm):\n    class Meta:\n        model = SeatPlanRoom\n        fields = ['name', 'batch', 'semester', 'department', 'program']\n        widgets = {\n            'name': forms.TextInput(attrs={'class': 'form-control'}),\n            'batch': forms.Select(attrs={'class': 'form-control'}),\n            'semester': forms.Select(attrs={'class': 'form-control'}),\n            'department': forms.Select(attrs={'class': 'form-control'}),\n            'program': forms.Select(attrs={'class': 'form-control'}),",
        "detail": "seatplan.forms",
        "documentation": {}
    },
    {
        "label": "SeatPlanGenerateForm",
        "kind": 6,
        "importPath": "seatplan.forms",
        "description": "seatplan.forms",
        "peekOfCode": "class SeatPlanGenerateForm(forms.Form):\n    room = forms.ModelChoiceField(queryset=Room.objects.all(), widget=forms.HiddenInput())\n    program = forms.ModelChoiceField(queryset=Program.objects.all(), empty_label='Select Program', required=False)\n    department = forms.ModelChoiceField(queryset=Department.objects.all(), empty_label='Select Department', required=False)\n    semester = forms.ModelChoiceField(queryset=Semester.objects.all(), empty_label='Select Semester', required=True)\n    widgets = {\n            'room': forms.Select(attrs={'class': 'form-control'}),\n            'program': forms.Select(attrs={'class': 'form-control'}),\n            'department': forms.Select(attrs={'class': 'form-control'}),\n            'semester': forms.Select(attrs={'class': 'form-control'}),",
        "detail": "seatplan.forms",
        "documentation": {}
    },
    {
        "label": "SeatPlanForm",
        "kind": 6,
        "importPath": "seatplan.forms",
        "description": "seatplan.forms",
        "peekOfCode": "class SeatPlanForm(forms.ModelForm):\n    class Meta:\n        model = SeatPlan\n        fields = ['room', 'student', 'seat_number']\n        widgets = {\n            'room': forms.Select(attrs={'class': 'form-control'}),\n            'student': forms.Select(attrs={'class': 'form-control'}),\n            'seat_number': forms.NumberInput(attrs={'class': 'form-control'}),\n        }\nclass BatchForm(forms.ModelForm):",
        "detail": "seatplan.forms",
        "documentation": {}
    },
    {
        "label": "BatchForm",
        "kind": 6,
        "importPath": "seatplan.forms",
        "description": "seatplan.forms",
        "peekOfCode": "class BatchForm(forms.ModelForm):\n    class Meta:\n        model = Batch\n        fields = ['name', 'sem_name']\n        widgets = {\n            'name': forms.TextInput(attrs={'class': 'form-control'}),\n            'sem_name': forms.Select(attrs={'class': 'form-control'}),\n        }\nclass RoomForm(forms.ModelForm):\n    class Meta:",
        "detail": "seatplan.forms",
        "documentation": {}
    },
    {
        "label": "RoomForm",
        "kind": 6,
        "importPath": "seatplan.forms",
        "description": "seatplan.forms",
        "peekOfCode": "class RoomForm(forms.ModelForm):\n    class Meta:\n        model = Room\n        fields = ['number', 'num_seats', 'num_columns']\n        widgets = {\n            'number': forms.TextInput(attrs={'class': 'form-control'}),\n            'num_seats': forms.NumberInput(attrs={'class': 'form-control'}),\n            'num_columns': forms.NumberInput(attrs={'class': 'form-control'}),\n        }",
        "detail": "seatplan.forms",
        "documentation": {}
    },
    {
        "label": "Room",
        "kind": 6,
        "importPath": "seatplan.models",
        "description": "seatplan.models",
        "peekOfCode": "class Room(models.Model):\n    number = models.IntegerField(unique=True)\n    num_seats = models.IntegerField(default=40)\n    num_columns = models.IntegerField(default=4)\n    def __str__(self):\n        return f'Room {self.number}'\nclass Batch(models.Model):\n    name = models.CharField(max_length=100)\n    sem_name =models.ForeignKey(Semester, on_delete=models.CASCADE)\n    def __str__(self):",
        "detail": "seatplan.models",
        "documentation": {}
    },
    {
        "label": "Batch",
        "kind": 6,
        "importPath": "seatplan.models",
        "description": "seatplan.models",
        "peekOfCode": "class Batch(models.Model):\n    name = models.CharField(max_length=100)\n    sem_name =models.ForeignKey(Semester, on_delete=models.CASCADE)\n    def __str__(self):\n        return self.name\nclass SeatPlanRoom(models.Model):\n    name = models.CharField(max_length=100)\n    batch = models.ForeignKey(Batch, on_delete=models.CASCADE)\n    semester = models.ForeignKey(Semester, on_delete=models.CASCADE)\n    department = models.ForeignKey(Department, on_delete=models.CASCADE)",
        "detail": "seatplan.models",
        "documentation": {}
    },
    {
        "label": "SeatPlanRoom",
        "kind": 6,
        "importPath": "seatplan.models",
        "description": "seatplan.models",
        "peekOfCode": "class SeatPlanRoom(models.Model):\n    name = models.CharField(max_length=100)\n    batch = models.ForeignKey(Batch, on_delete=models.CASCADE)\n    semester = models.ForeignKey(Semester, on_delete=models.CASCADE)\n    department = models.ForeignKey(Department, on_delete=models.CASCADE)\n    program = models.ForeignKey(Program, on_delete=models.CASCADE)\n    room = models.ForeignKey(Room, on_delete=models.CASCADE)\n    def __str__(self):\n        return self.name\nclass SeatPlan(models.Model):",
        "detail": "seatplan.models",
        "documentation": {}
    },
    {
        "label": "SeatPlan",
        "kind": 6,
        "importPath": "seatplan.models",
        "description": "seatplan.models",
        "peekOfCode": "class SeatPlan(models.Model):\n    room = models.ForeignKey(Room, on_delete=models.CASCADE)\n    student = models.OneToOneField(Student, on_delete=models.DO_NOTHING)\n    seat_number = models.IntegerField()\n    class Meta:\n        unique_together = ('room', 'seat_number')\n    def __str__(self):\n        return f'{self.student} in Room {self.room.number}  Seat {self.seat_number}'",
        "detail": "seatplan.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "seatplan.urls",
        "description": "seatplan.urls",
        "peekOfCode": "urlpatterns = [\n    # Room URLs\n    path('room/', RoomListView.as_view(), name='room_list'),\n    path('room/create/', RoomCreateView.as_view(), name='room_create'),\n    path('room/<int:pk>/update/', RoomUpdateView.as_view(), name='room_update'),\n    path('room/<int:pk>/detail/', RoomDetailView.as_view(), name='room_detail'),\n    path('room/generate-seatplan/', GenerateSeatPlan.as_view(), name='generate_seat_plan'),\n    path('batch/create/', BatchCreateView.as_view(), name='create_batch'),\n    path('batch/list/', BatchListView.as_view(), name='batch_list'),\n    path('ajax/load-departments/', load_departments, name='load_departments'),",
        "detail": "seatplan.urls",
        "documentation": {}
    },
    {
        "label": "SeatPlanRoomCreateView",
        "kind": 6,
        "importPath": "seatplan.views",
        "description": "seatplan.views",
        "peekOfCode": "class SeatPlanRoomCreateView(CreateView):\n    model = SeatPlanRoom\n    form_class = SeatPlanRoomForm\n    template_name = 'room/seatplanroom_form.html'\n    success_url = reverse_lazy('room_list')\n    def form_valid(self, form):\n        room_pk = self.kwargs['pk']\n        room = get_object_or_404(Room, pk=room_pk)\n        form.instance.room = room\n        return super().form_valid(form)",
        "detail": "seatplan.views",
        "documentation": {}
    },
    {
        "label": "SeatPlanRoomDetailView",
        "kind": 6,
        "importPath": "seatplan.views",
        "description": "seatplan.views",
        "peekOfCode": "class SeatPlanRoomDetailView(DetailView):\n    model = Room\n    template_name = 'room/seatplanroom_detail.html'\n    context_object_name = 'room'\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        room = self.get_object()\n        context['seatplanrooms'] = SeatPlanRoom.objects.filter(room=room)\n        return context\ndef load_departments(request):",
        "detail": "seatplan.views",
        "documentation": {}
    },
    {
        "label": "RoomListView",
        "kind": 6,
        "importPath": "seatplan.views",
        "description": "seatplan.views",
        "peekOfCode": "class RoomListView(ListView):\n    model = Room\n    template_name = 'room/room_list.html'\n    context_object_name = 'rooms'\nclass RoomCreateView(CreateView):\n    model = Room\n    form_class = RoomForm\n    template_name = 'room/room_form.html'\n    success_url = reverse_lazy('room_list')\nclass RoomDetailView(DetailView):",
        "detail": "seatplan.views",
        "documentation": {}
    },
    {
        "label": "RoomCreateView",
        "kind": 6,
        "importPath": "seatplan.views",
        "description": "seatplan.views",
        "peekOfCode": "class RoomCreateView(CreateView):\n    model = Room\n    form_class = RoomForm\n    template_name = 'room/room_form.html'\n    success_url = reverse_lazy('room_list')\nclass RoomDetailView(DetailView):\n    model = Room\n    template_name = 'room/room_detail.html'\n    context_object_name = 'room'\n    def get_context_data(self, **kwargs):",
        "detail": "seatplan.views",
        "documentation": {}
    },
    {
        "label": "RoomDetailView",
        "kind": 6,
        "importPath": "seatplan.views",
        "description": "seatplan.views",
        "peekOfCode": "class RoomDetailView(DetailView):\n    model = Room\n    template_name = 'room/room_detail.html'\n    context_object_name = 'room'\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        room = self.get_object()\n        seats_per_column = room.num_seats // room.num_columns\n        seat_layout = [\n            [f'{column + 1}-{row + 1}' for column in range(room.num_columns)]",
        "detail": "seatplan.views",
        "documentation": {}
    },
    {
        "label": "RoomUpdateView",
        "kind": 6,
        "importPath": "seatplan.views",
        "description": "seatplan.views",
        "peekOfCode": "class RoomUpdateView(UpdateView):\n    model = Room\n    form_class = RoomForm\n    template_name = 'room/room_form.html'\n    success_url = reverse_lazy('room_list')\nclass GenerateSeatPlan(View):\n    template_name = 'room/seatplan.html'\n    def get(self, request):\n        form = SeatPlanGenerateForm()\n        return render(request, self.template_name, {'form': form})",
        "detail": "seatplan.views",
        "documentation": {}
    },
    {
        "label": "GenerateSeatPlan",
        "kind": 6,
        "importPath": "seatplan.views",
        "description": "seatplan.views",
        "peekOfCode": "class GenerateSeatPlan(View):\n    template_name = 'room/seatplan.html'\n    def get(self, request):\n        form = SeatPlanGenerateForm()\n        return render(request, self.template_name, {'form': form})\n    def post(self, request, *args, **kwargs):\n        form = SeatPlanGenerateForm(request.POST)\n        if form.is_valid():\n            room_id = form.cleaned_data['room'].id\n            semester_id = form.cleaned_data['semester'].id",
        "detail": "seatplan.views",
        "documentation": {}
    },
    {
        "label": "BatchCreateView",
        "kind": 6,
        "importPath": "seatplan.views",
        "description": "seatplan.views",
        "peekOfCode": "class BatchCreateView(CreateView):\n    model = Batch\n    form_class = BatchForm\n    template_name = 'batch/batch_form.html'\n    success_url = reverse_lazy('batch_list')  # Redirect to batch list view upon successful form submission\nclass BatchListView(ListView):\n    model = Batch\n    template_name = 'batch/batch_list.html'\n    context_object_name = 'batches'  # Name of the context variable for batches list\n# combination view ",
        "detail": "seatplan.views",
        "documentation": {}
    },
    {
        "label": "BatchListView",
        "kind": 6,
        "importPath": "seatplan.views",
        "description": "seatplan.views",
        "peekOfCode": "class BatchListView(ListView):\n    model = Batch\n    template_name = 'batch/batch_list.html'\n    context_object_name = 'batches'  # Name of the context variable for batches list\n# combination view \nclass RoomSeatPlanDetailView(DetailView):\n    model = Room\n    template_name = 'room/room_seatplan_detail.html'\n    context_object_name = 'room'\n    def get_context_data(self, **kwargs):",
        "detail": "seatplan.views",
        "documentation": {}
    },
    {
        "label": "RoomSeatPlanDetailView",
        "kind": 6,
        "importPath": "seatplan.views",
        "description": "seatplan.views",
        "peekOfCode": "class RoomSeatPlanDetailView(DetailView):\n    model = Room\n    template_name = 'room/room_seatplan_detail.html'\n    context_object_name = 'room'\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        room = self.get_object()\n        # Seat layout logic\n        seats_per_column = room.num_seats // room.num_columns\n        seat_layout = [",
        "detail": "seatplan.views",
        "documentation": {}
    },
    {
        "label": "load_departments",
        "kind": 2,
        "importPath": "seatplan.views",
        "description": "seatplan.views",
        "peekOfCode": "def load_departments(request):\n    program_id = request.GET.get('program')\n    departments = Department.objects.filter(program_id=program_id).order_by('name')\n    return JsonResponse(list(departments.values('id', 'name')), safe=False)\ndef load_semesters(request):\n    department_id = request.GET.get('department')\n    semesters = Semester.objects.filter(department_id=department_id).order_by('name')\n    return JsonResponse(list(semesters.values('id', 'name')), safe=False)\nclass RoomListView(ListView):\n    model = Room",
        "detail": "seatplan.views",
        "documentation": {}
    },
    {
        "label": "load_semesters",
        "kind": 2,
        "importPath": "seatplan.views",
        "description": "seatplan.views",
        "peekOfCode": "def load_semesters(request):\n    department_id = request.GET.get('department')\n    semesters = Semester.objects.filter(department_id=department_id).order_by('name')\n    return JsonResponse(list(semesters.values('id', 'name')), safe=False)\nclass RoomListView(ListView):\n    model = Room\n    template_name = 'room/room_list.html'\n    context_object_name = 'rooms'\nclass RoomCreateView(CreateView):\n    model = Room",
        "detail": "seatplan.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'Student_Management_systems.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]